### Решение заданий лабораторной работы №44

#### **5.1 Создание БД SQLite с использованием скрипта**
1. Откройте DBeaver.
2. Создайте новое подключение к SQLite:
   - Выберите тип БД: SQLite.
   - Укажите путь к файлу `GamesStore.sqlite` (если файла нет, он будет создан автоматически).
3. Откройте SQL-скрипт `sqlite.txt` и выполните его в DBeaver для создания таблиц и заполнения их данными.

---

#### **5.2 Создание БД MSSQL с использованием скрипта**
1. Откройте DBeaver или SSMS.
2. Создайте подключение к MSSQL:
   - Сервер: `mssql`
   - Логин: `isppXXNN` (замените `XX` на номер группы, `NN` на номер рабочего места).
   - Пароль: `XXNN` (аналогично логину).
3. Откройте SQL-скрипт `mssql.txt` и выполните его для создания таблиц и заполнения их данными.

---

#### **5.3 Создание БД SQLite с использованием кода на C#**
1. Создайте консольное приложение на C#.
2. Добавьте метод `CreateDatabase`:
   ```csharp
   using System;
   using System.Data.SQLite;

   class Program
   {
       static void CreateDatabase(string dbName)
       {
           if (!System.IO.File.Exists(dbName))
           {
               SQLiteConnection.CreateFile(dbName);
               Console.WriteLine($"База данных {dbName} создана.");
           }
           else
           {
               Console.WriteLine($"Файл {dbName} уже существует.");
           }

           using (var connection = new SQLiteConnection($"Data Source={dbName};Version=3;"))
           {
               connection.Open();
               string createTableQuery = @"
                   CREATE TABLE IF NOT EXISTS Games (
                       Id INTEGER PRIMARY KEY AUTOINCREMENT,
                       Name TEXT NOT NULL,
                       Price REAL NOT NULL
                   );";
               using (var command = new SQLiteCommand(createTableQuery, connection))
               {
                   command.ExecuteNonQuery();
                   Console.WriteLine("Таблица Games создана.");
               }
           }
       }

       static void Main(string[] args)
       {
           CreateDatabase("GamesStore.sqlite");
       }
   }
   ```
3. Запустите приложение для создания БД и таблицы.

---

#### **5.4 Создание таблиц БД MSSQL с использованием кода на C#**
1. Создайте консольное приложение на C#.
2. Добавьте метод `CreateDatabase`:
   ```csharp
   using System;
   using System.Data.SqlClient;

   class Program
   {
       static void CreateDatabase()
       {
           string connectionString = "Server=mssql;Database=master;User Id=isppXXNN;Password=XXNN;";
           using (var connection = new SqlConnection(connectionString))
           {
               connection.Open();
               string createTablesQuery = @"
                   IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Roles')
                   BEGIN
                       CREATE TABLE Roles (
                           Id INT PRIMARY KEY IDENTITY,
                           Name NVARCHAR(50) NOT NULL
                       );
                   END

                   IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Users')
                   BEGIN
                       CREATE TABLE Users (
                           Id INT PRIMARY KEY IDENTITY,
                           RoleId INT NOT NULL,
                           Login NVARCHAR(50) NOT NULL,
                           Password NVARCHAR(50) NOT NULL,
                           FOREIGN KEY (RoleId) REFERENCES Roles(Id)
                       );
                   END";
               using (var command = new SqlCommand(createTablesQuery, connection))
               {
                   command.ExecuteNonQuery();
                   Console.WriteLine("Таблицы Roles и Users созданы.");
               }
           }
       }

       static void Main(string[] args)
       {
           CreateDatabase();
       }
   }
   ```
3. Запустите приложение для создания таблиц `Roles` и `Users`.

---

### Ответы на контрольные вопросы:
1. **Система управления базами данных (СУБД)** — это программное обеспечение для создания, управления и администрирования баз данных. Примеры: SQLite, MySQL, MSSQL.
2. **База данных** — организованная структура для хранения, управления и доступа к данным.
3. **Реляционные СУБД** — это системы, основанные на реляционной модели данных. Примеры: MySQL, PostgreSQL, Microsoft SQL Server, Oracle Database.
